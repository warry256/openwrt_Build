#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: NanoPi_R2S

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'true'

env:
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: Ubuntu-20.04

    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    - name: 检查
      uses: actions/checkout@main

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"

    - name: 设置当前的日期
      id: date
      run: |
        echo "date1=$(date +'%m/%d_%Y_%H/%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV
        echo "date4=$(date +'%m.%d.%Y')" >> $GITHUB_ENV   

    - name: 克隆源代码
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
        TZ: Asia/Shanghai     
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo "src-git ssrp https://github.com/fw876/helloworld.git" >> ./feeds.conf.default
        
    - name: 更新 & 安装 feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 自定义安装源
      working-directory: ./openwrt
      run: |
        git clone https://github.com/kenzok8/litte package/litte
        git clone https://github.com/xiaorouji/openwrt-passwall package/passwall

    - name: 自定义配置文件NanoPi_R2S
      env:
        CONFIG_FILE: 'R2S.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt && rm -rf package/litte/luci-app-ssr-plus && rm -rf package/litte/naiveproxy
        cp -f package/litte/commit/default-settings package/lean/default-settings/files/zzz-default-settings
        cp -f package/litte/commit/banner package/base-files/files/etc/banner
        cp -f package/litte/commit/R2Sdiffconfig .config && make defconfig
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: SSH 连接到 Actions
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
    - name: 下载包文件
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 设置缓存
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        prefix: ${{ github.workspace }}/openwrt
        
    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j1 V=s
        echo "::set-output name=status::success"        
     
    - name: 检查空间使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        mkdir firmware && find openwrt/bin/targets/*/*/ -maxdepth 1 \
        -name "*combined*" \
        -or -name "*sysupgrade*" \
        -or -name "sha256sums" \
        | xargs -i mv -f {} ./firmware/
        cp openwrt/.config  ./firmware/${{matrix.target}}.config
        cd firmware
        echo ${{ env.date4 }} > version.txt
        mv sha256sums ${{matrix.target}}_sha256sums
        rename -v "s/^openwrt/${{ env.date3 }}-NanoPi_R2S/" *
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: 上传固件目录
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: ${{ env.date3 }} _NanoPi_R2S
        path: ${{ env.FIRMWARE }}

    - name: 生成发布标签
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::${{ env.date1 }}"
        touch release.txt
        [ $UPLOAD_COWTRANSFER = true ] && echo "🔗 [Cowtransfer](${{ steps.cowtransfer.outputs.url }})" >> release.txt
        [ $UPLOAD_WETRANSFER = true ] && echo "🔗 [WeTransfer](${{ steps.wetransfer.outputs.url }})" >> release.txt
        echo "::set-output name=status::success"

    - name: 上传固件发布
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        files: "${{ env.FIRMWARE }}/*"
        name: ${{ env.date2 }} ${{matrix.target}}
        tag_name: ${{ env.date3 }}_${{matrix.target}}
        body_path: release.txt

    - name: 删除工作流
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 2
        keep_minimum_runs: 0

    - name: 删除旧版本
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 2
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
